# .github/workflows/docs-automation.yml
name: Generate and Update API Documentation

# This workflow is triggered on a push to the main branch,
# but only when changes are made within the 'backend' directory.
on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  # This allows you to manually run the workflow from the GitHub Actions tab.
  workflow_dispatch:

jobs:
  build-and-deploy-docs:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository.
      - name: Checkout repository
        uses: actions/checkout@v4
        # We need to fetch the full history to be able to commit back later.
        with:
          fetch-depth: 0

      # Step 2: Set up Python environment.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Step 3: Install dependencies for documentation generation.
      # These are the same packages you installed locally.
      - name: Install Documentation and Backend Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme recommonmark
          # Install backend dependencies to resolve the ModuleNotFoundError
          pip install -r backend/requirements.txt

      # Step 4: Generate the documentation.
      - name: Generate API Documentation
        run: |
          # Clean up any old builds
          sphinx-build -b html -a docs/source docs/build
        
      # Step 5: Commit and push the generated changes.
      # This action automatically handles committing the new files to the branch.
      - name: Commit and Push Documentation
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Docs: Auto-generate and update API documentation"
          branch: main
          # We only commit the new files in the docs/build directory.
          file_pattern: 'docs/build/**'
