# .github/workflows/frontend-ci.yml

name: Flutter Frontend CI

on:
  push:
    branches:
      - main
    paths:
      # This ensures the workflow only runs when changes are made in the frontend directory.
      - 'frontend/**'
  # This allows you to run the workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add a caching step to speed up dependency downloads
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FLUTTER_ROOT }}/bin
            ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Set up Flutter
        # This action sets up the Flutter environment for us.
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.x'

      - name: Install dependencies
        # This command will be much faster if the cache is hit
        run: flutter pub get

      - name: Check code formatting
        run: flutter format --dry-run --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze

      - name: Run widget tests
        run: flutter test

      # This new step generates the documentation after all previous steps (including tests)
      # have passed. It will create a `doc/api` folder with the HTML documentation.
      - name: Generate documentation
        run: |
          dart doc


      # Optional: Add a step to build the app for a platform (e.g., web or Android)
      # This ensures the app compiles successfully.
      # - name: Build Web
      #   run: flutter build web --release
